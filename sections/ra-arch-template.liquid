{%- assign featured_image = product.selected_variant.featured_image | default: product.featured_image -%}
{%- assign featured_image_alt = current_variant.featured_image.alt | default: product.featured_image.alt -%}
<div class="arch-coll-img">
  <img src="{{ featured_image | img_url: '397x515' }}" alt="{{ featured_image_alt | escape }}" height="458" />
</div>
<div class="arch-count-shade-cart">
    <form method="post" action="/cart/add" id="product_form_{{product.id}}" accept-charset="UTF-8" class="product-form product-form-product-template" enctype="multipart/form-data">
        <input type="hidden" name="form_type" value="product">
        <input type="hidden" name="utf8" value="âœ“">
        <div class="qty-wrapper qty-control-wrapper ">
                {% assign x = 1 %}
                {% assign fullwithd = 0 %}
                {% for option in product.options_with_values %}
                    {% assign stock_ary = '' %}
                    {% assign varids_ary = '' %}
                    {% assign selectedvar_ary = '' %} {%- comment -%} for selected varient for selected collection{%- endcomment -%}

                    {% if option.name == "Color" %}
                        {% assign fullwithd = 1 %}
                        {% for vrnt in product.variants %}
                            {% assign vrnt_apd = '' %}
                            {% case x %}
                                    {% when 1 %}
                                {% assign vrnt_apd = vrnt.option1 %}
                                    {% when 2 %}
                                {% assign vrnt_apd = vrnt.option2 %}
                                    {% when 3 %}
                                {% assign vrnt_apd = vrnt.option3 %}
                                {% endcase %}
                    
                            {% assign vrnt_aid = vrnt.id %}
            
                            {% if varids_ary == '' %}
                                {% assign varids_ary = varids_ary | append: vrnt_aid %}
                            {% else %}
                                {% assign varids_ary = varids_ary | append: '#' | append: vrnt_aid %}
                            {% endif %}
            
                            {% if vrnt.available == false %}
                                {% if stock_ary == '' %}
                                    {% assign stock_ary = stock_ary | append: vrnt_apd %}
                                {% else %}
                                    {% assign stock_ary = stock_ary | append: '#' | append: vrnt_apd %}
                                {% endif %}
                            {% endif %}
                        
                            {% if asiam == 1 %}
                                {% unless vrnt.metafields.hourprod.view_collection == Blank %}
                                    {% assign viewscolletion = vrnt.metafields.hourprod.view_collection | split: "|" %}
                                    {% for member in viewscolletion %}
                                        {% assign strmum = member | strip %}
                                        {% assign conid = collection.id | strip %}
                                        {% if conid == strmum %}
                                            {% if selectedvar_ary == '' %}
                                                {% assign selectedvar_ary = selectedvar_ary | append: vrnt_apd %}
                                            {% else %}
                                                {% assign selectedvar_ary = selectedvar_ary | append: '#' | append: vrnt_apd %}
                                            {% endif %}
                                        {% endif %}
                                    {% endfor %}
                                {% endunless %}
                            {% endif %}
                        {% endfor %}
                    {% endif %}
                    {% assign x = x | plus: 1 %}
                    {% assign widthfull = '' %}
                    <div class="selector-wrapper js product-form__item {% if option.name != "Color" %} normal-option {% endif %} ">
                    <select style="{% if option.name == "Color" %}display: none;{% endif %}" class="single-option-selector product-form__input single-option-{{ option.name }}-{{ product.id }} " id="SingleOptionSelector-{{ forloop.index0 }}-{{product.id}}" data-index="option{{ forloop.index }}">
                        {% assign varids = varids_ary | split:'#' %}
                        {% assign k = 0 %}
                        {% for value in option.values %}

                            {% assign is_in_stock = true %}
                            {% if option.name == "Color" %}
                                {% assign outstocks = stock_ary | split:'#' %}
                                {% for outstock in outstocks %}
                                    {% if outstock == value %}
                                        {% assign is_in_stock = false %}
                                    {% endif %}
                                {% endfor %}

                                {%- comment -%}use for selected varient in selected collection{%- endcomment -%}
                                {% if asiam == 1 %}
                                    {% assign displayss = selectedvar_ary | split:'#' %}
                                    {% for displays in displayss %} 
                                        {% if displays == value %}
                                            <option value="{{ value | escape }}"{% if option.selected_value == value %} selected="selected"{% endif %} data-instock={% if is_in_stock == false %}"0"{% else %}"1"{% endif %} {% if option.name == "Color" %}data-id="{{ varids[k] }}"{% else %}data-productid="{{ product.id }}"{% endif %} >{{ value }}</option>
                                        {% endif %}
                                    {% endfor %}
                                {% else %}
                                    <option value="{{ value | escape }}"{% if option.selected_value == value %} selected="selected"{% endif %} data-instock={% if is_in_stock == false %}"0"{% else %}"1"{% endif %} {% if option.name == "Color" %}data-id="{{ varids[k] }}"{% else %}data-productid="{{ product.id }}"{% endif %} >{{ value }}</option>
                                {% endif %}
                        
                            {% else %}
                                <option value="{{ value | escape }}"{% if option.selected_value == value %} selected="selected"{% endif %} data-instock={% if is_in_stock == false %}"0"{% else %}"1"{% endif %} {% if option.name == "Color" %}data-id="{{ varids[k] }}"{% else %}data-productid="{{ product.id }}"{% endif %} >{{ value }}</option>  
                            {% endif %}
                            {% assign k = k | plus: 1 %}
                        {% endfor %}
                    </select>

                    {% if option.name == "Color" %}
                    {% assign is_color = true %}
                    {% assign shadetitle = 'Shade' %}
                    {% for variant in product.variants %}
                      {% if variant == product.selected_or_first_available_variant %}
                      	{% assign shadetitle = variant.title %}
                      {% endif %}
                    {% endfor %}
                    <label class="colorsltShare" id="colorselect-{{product.id}}">
                    <span>{{shadetitle}}</span>
                    <div id="option-color-name"></div>
                    <div id="option-color-image" class="option-shade-img">
                        <img id="dynamicimgsrc-{{product.id}}" src="https://cdn.shopify.com/s/files/1/0081/1660/0950/files/default-shade.png" alt="Color Shade">
                    </div>
                    </label>
                    <div class="color-pallets-wrap-{{product.id}} arch-pallets"></div>
                    {% endif %}
                    </div>
                {% endfor %}
            
            <select name="id" id="ProductSelect-product-template-{{product.id}}" class="product-form__variants no-js">
                {% for variant in product.variants %}
                    {% if variant.available %}
                        <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">
                        {{ variant.title }}
                        </option>
                    {% else %}
                        <option disabled="disabled">{{ variant.title }} - {{ 'products.product.sold_out' | t }}</option>
                    {% endif %}
                {% endfor %}
            </select>
            <div class="product-form__item product-form__item--quantity {% if fullwithd == 0 %} fullwidthqty {% endif %}">
                <span class="qty-minus">-</span>
                <input type="text" pattern="\d*" id="Quantity" name="quantity" value="1" min="1" maxlength="12" title="Qty" class="product-form__input" mm-min="1" max="4" mm-max="4" step="1" mm-step="1">
                <span class="qty-plus">+</span>
            </div>
        </div>
        <div class="product-form__item product-form__item--submit">
            <button type="submit" name="add" id="AddToCart-product-template" class="btn product-form__cart-submit"><span id="AddToCartText-product-template">Add to cart</span></button>
        </div>
    </form>
</div>
{% assign prodimage = '' %}
{% for image in product.images %}
    {% assign imageURl = image | img_url: '300x300' %}
    {% assign imagedata = imageURl | append: '#' | append: image.alt %}
    {% assign prodimage = prodimage | append: imagedata | append: '|' %}
{% endfor %}
<script type="text/javascript">
  $('.colorsltShare').click(function() {
    $('.more-options .color-pallets-wrap').stop().slideUp()
    $(this).next().stop().slideToggle();
  });
jQuery('.single-option-Color-{{product.id}} option').each(function() {
    //$image = $('.grid__item:has(img[alt="'+$(this).val()+'"])');
    var imagearray = "{{prodimage}}";
    var trainindIdArray = imagearray.split('|');
    var image_url;
    var currentname = $(this).val()+'-color';
    $.each(trainindIdArray, function(index, value) { 
           var valArray = value.split('#');
           if( valArray[1] == currentname){
              image_url = valArray[0]; 
           }
    });
    $image_url = image_url;
    //$image_url = $('img[alt="' + $(this).val() + '-color"]').attr('src');
    $noimage = '';
    if (typeof $image_url === 'undefined') {
        $noimage = 'noimage';
    }
    $outtext = '';
    $available = 1;
    if ($(this).data('instock') == '0') {
        $outtext = '<strong>OUT OF STOCK | </strong>';
        $available = 0;
    }
    $varid = $(this).data('id');
    $('.color-pallets-wrap-{{product.id}}').append('<div class="color-palette-{{product.id}} palette ' + $noimage + '"><a href="javascript:void(0)" data-title="' + $(this).val() + '" data-available="' + $available + '" data-id="' + $varid + '"><img src="' + $image_url + '" alt="Color" /><span class="shades_label_overlay">' + $outtext + '' + $(this).text() + '</span></a></div>');
});
// Color Palette On Click
jQuery(document).on('click', '.color-palette-{{product.id}} a', function() {

    jQuery('.color-pallets-wrap-{{product.id}}').slideUp();
    $listimg = $(this).find('img').attr('src')
    $listtxt = $(this).data('title');

    /*simple Load*/
    $varientid = $(this).data('id');
    var select = document.querySelector('#SingleOptionSelector-0-{{product.id}}');
    select.value = $listtxt;
    select.dispatchEvent(new Event('change'));

    var select = document.querySelector('#ProductSelect-product-template-{{product.id}}');
    select.value = $varientid;
    select.dispatchEvent(new Event('change'));

    /*jQuery('#dynamicimgsrc-{{product.id}}').attr('src', $listimg);*/
    jQuery('#colorselect-{{product.id}} > span').text($listtxt);

});
$('#product_form_{{product.id}}').submit(function(e) {
    e.preventDefault();
    var _config = {
        // What you might want to change
        addToCartBtnLabel: 'Add to cart',
        addedToCartBtnLabel: 'Thank you!',
        addingToCartBtnLabel: 'Adding...',
        soldOutBtnLabel: 'Out of stock',
        howLongTillBtnReturnsToNormal: 1000, // in milliseconds.
        cartCountSelector: '#CartCount',
        cartTotalSelector: '#cart-price',
        // 'aboveForm' for top of add to cart form, 
        // 'belowForm' for below the add to cart form, and 
        // 'nextButton' for next to add to cart button.
        feedbackPosition: 'nextButton',

        // What you will never need to change
        addToCartBtnSelector: '[type="submit"]',
        addToCartFormSelector: 'form[action="/cart/add"]',
        shopifyAjaxAddURL: '/cart/add.js',
        shopifyAjaxCartURL: '/cart.js'
    };

    var _showFeedback = function(success, html, $addToCartForm) {
        $('.ajaxified-cart-feedback').remove();
        $('body').addClass('cart-body');
        var feedback = '<p class="ajaxified-cart-feedback ' + success + '">' + html + '</p>';
        switch (_config.feedbackPosition) {
            case 'aboveForm':
                $addToCartForm.before(feedback);
                break;
            case 'belowForm':
                $addToCartForm.after(feedback);
                break;
            case 'nextButton':
            default:
                $addToCartForm.find(_config.addToCartBtnSelector).after(feedback);
                break;
        }
        // If you use animate.css
        // $('.ajaxified-cart-feedback').addClass('animated bounceInDown');
        $('.ajaxified-cart-feedback').slideDown();
    };

    var _setText = function($button, label) {
        if ($button.children().length) {
            $button.children().each(function() {
                if ($.trim($(this).text()) !== '') {
                    $(this).text(label);
                }
            });
        } else {
            $button.val(label).text(label);
        }
    };

    var $addToCartForm = $(this);
    
    var $addToCartBtn = $addToCartForm.find(_config.addToCartBtnSelector);
    _setText($addToCartBtn, _config.addingToCartBtnLabel);
    $addToCartBtn.addClass('disabled').prop('disabled', true);
    $.ajax({
    url: _config.shopifyAjaxAddURL,
    dataType: 'json',
    type: 'post',
    data: $addToCartForm.serialize(),
    success: function(itemData) {
        // Re-enable add to cart button.
        $addToCartBtn.addClass('inverted');
        _setText($addToCartBtn, _config.addedToCartBtnLabel);
        _showFeedback('success', '<i class="fa fa-check"></i> Added to cart! <a href="/cart">View cart</a> or <a href="/collections/all">continue shopping</a>.', $addToCartForm);
        window.setTimeout(function() {
            $addToCartBtn.prop('disabled', false).removeClass('disabled').removeClass('inverted');
            _setText($addToCartBtn, _config.addToCartBtnLabel);
        }, _config.howLongTillBtnReturnsToNormal);
        // Update cart count and show cart link.
        $.getJSON(_config.shopifyAjaxCartURL, function(cart) {
            //console.log(itemData.product_title);

                var value = $('.site-header__cart-count span').html() || '0';
                if (value <= 0) {
                    $('.site-header__cart-count').removeClass('custom-hiden');
                }
                $('.site-header__cart-count span').text(value.replace(/[0-9]+/, cart.item_count));
                $('.desktop-cart-count span').text(value.replace(/[0-9]+/, cart.item_count));
                
        });
    },
    error: function(XMLHttpRequest) {
        var response = eval(XMLHttpRequest.responseText);
        response = response.description;
        if (response.slice(0, 4) === 'All ') {
            _showFeedback('error', response.replace('All 1 ', 'All '), $addToCartForm);
            $addToCartBtn.prop('disabled', false);
            _setText($addToCartBtn, _config.soldOutBtnLabel);
            $addToCartBtn.prop('disabled', true);

            $('ul.messages li').removeClass('success-msg');
            $('ul.messages li').addClass('error-msg');
            $('ul.messages li span').text('THE MAXIMUM QUANTITY ALLOWED FOR PURCHASE IS ' + response.split(' ')[1] + '.');
            $('.messages').css('display', 'block');
            setTimeout(function() {
                $('.messages').css('display', 'none');
            }, 3000);
        } else {
            _showFeedback('error', '<i class="fa fa-warning"></i> ' + response, $addToCartForm);
            $addToCartBtn.prop('disabled', false).removeClass('disabled');
            _setText($addToCartBtn, _config.addToCartBtnLabel);
        }
    }
});
return false;
});
</script>
{% schema %}
  {
    "name": "Ra Arch Template",
    "settings": []
  }
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}
